system {

  name = "acct_system"

  http {
    client {
      socketTimeout: 2
      connectionTtl: 1
      evictIdleConnections: 10
    }
  }

  cassandra {

    cluster {

      keyspace: "acct_system"
      preparedStatementCacheSize: 1000
      //Comma-separeted values of IP/Hostname and ports
      contactPoints: "localhost:9042"
      //ANY, ONE, TWO, THREE, QUORUM, ALL, LOCAL_QUORUM, EACH_QUORUM, SERIAL, LOCAL_SERIAL, LOCAL_ONE
      consistencyLevel = "LOCAL_ONE"
      serialConsistencyLevel = "SERIAL"
      withSSL: false
      //When true, truststore and truststore password must be provided
      trustStore: ""
      trustStorePassword: ""
      username: ""
      password: ""

    }

  }

  migrateOnStart: true
  database {
    dataSourceClassName: "org.postgresql.ds.PGSimpleDataSource"
    dataSource.user: "postgres"
    dataSource.password: "postgres"
    dataSource.databaseName: "kyct"
    dataSource.portNumber: 5432
    dataSource.serverName: "localhost"
    connectionTimeout: 30000
    maximumPoolSize: 10
  }

  metrics {
    prometheus {
      port = 4321
    }
  }

  executionContext {
    threadPoolSize = 5
  }

  tokenVerification {
    configURL = "https://id.dev.ubirch.com/auth/realms/ubirch-default-realm/.well-known/openid-configuration"
    kid = "PSJ-ZQWx9EPztQowhNbET0rZwTYraqi6uDbxJwy4n3E"
  }

}

token {
  env = dev
  tokenPublicKey = "2e09fc73de8b067c4c38292e8d683ed3abaef220c9b8a6b85935a055359139a70f17b2e76543518a113fba84863db6060bb0224fc45104ca0ac8a8279b0d744a"
  issuer = "https://token."${token.env}".ubirch.com"
  audience = ["https://data."${token.env}".ubirch.com", "https://api.console."${token.env}".ubirch.com"]
  tokenManager: ${token.issuer}
  scopes = ["thing:getinfo", "thing:storedata"],
  #This value is not required here. It is added as
  #the sdk requires it to get started
  secret: "H8w9i64mXlly-UrQDSgHCc3FHbebB2i3ypBJ0I+sZA3mI9hxu5p1veWlE"
}

